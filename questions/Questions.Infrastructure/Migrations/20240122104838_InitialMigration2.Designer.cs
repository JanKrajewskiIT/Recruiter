// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Questions.Infrastructure.Context;

#nullable disable

namespace Questions.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240122104838_InitialMigration2")]
    partial class InitialMigration2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Questions.Domain.Entities.CategoryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasMaxLength(5000)
                        .HasColumnType("character varying(5000)");

                    b.Property<string>("IconName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<Guid?>("ParentCategoryId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("bb1c2675-5877-4aa5-9bc6-00be8d449549"),
                            IconName = "CiCircleList",
                            Name = "Przygotowanie na rozmowę",
                            Order = 1
                        },
                        new
                        {
                            Id = new Guid("997bb095-fb04-4872-ac35-0d05cedc3de0"),
                            IconName = "BsPersonFillCheck",
                            Name = "Umiejętności miękkie",
                            Order = 2
                        },
                        new
                        {
                            Id = new Guid("28aec609-f96e-4ae6-8db2-358a1892502e"),
                            IconName = "BsDiagram3Fill",
                            Name = "Architektura",
                            Order = 3
                        },
                        new
                        {
                            Id = new Guid("a16bb186-092e-440d-92c9-fe57cd96ec4f"),
                            IconName = "VscServerProcess",
                            Name = "Algorytmy",
                            Order = 4
                        },
                        new
                        {
                            Id = new Guid("4ec57b9a-8753-4ec0-bebe-d4d361c9ecf2"),
                            IconName = "SiCsharp",
                            Name = "C#",
                            Order = 5
                        },
                        new
                        {
                            Id = new Guid("6c5cf69c-c674-4fc0-b613-c45daa8633c0"),
                            IconName = "SiDotnet",
                            Name = ".Net",
                            Order = 6
                        },
                        new
                        {
                            Id = new Guid("d5dfef6e-6be4-42b2-a5b8-4852c733bcf8"),
                            IconName = "SiMysql",
                            Name = "SQL",
                            Order = 7
                        },
                        new
                        {
                            Id = new Guid("3bb831ec-69aa-4a75-a71e-5079dc06ac26"),
                            IconName = "SiReact",
                            Name = "React",
                            Order = 8
                        },
                        new
                        {
                            Id = new Guid("c13e9522-2b62-433a-9bd6-365e49233508"),
                            IconName = "SiTypescript",
                            Name = "Type Script",
                            Order = 9
                        },
                        new
                        {
                            Id = new Guid("9dd3c14f-3685-4370-bc0c-42ee8bf2b2e8"),
                            IconName = "SiCss3",
                            Name = "CSS3",
                            Order = 10
                        },
                        new
                        {
                            Id = new Guid("db7d3eaa-d153-48d4-b000-383a8cf1fc6f"),
                            IconName = "SiHtml5",
                            Name = "HTML5",
                            Order = 11
                        },
                        new
                        {
                            Id = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            IconName = "",
                            Name = "Wzorce projektowe",
                            Order = 1,
                            ParentCategoryId = new Guid("28aec609-f96e-4ae6-8db2-358a1892502e")
                        },
                        new
                        {
                            Id = new Guid("71c8a70b-0e81-4b79-a7f8-fb51fcbef984"),
                            IconName = "",
                            Name = "OOP",
                            Order = 2,
                            ParentCategoryId = new Guid("28aec609-f96e-4ae6-8db2-358a1892502e")
                        },
                        new
                        {
                            Id = new Guid("0a07f758-355f-4796-8ab4-f5a34cfca181"),
                            IconName = "",
                            Name = "Wielowątkowość",
                            Order = 1,
                            ParentCategoryId = new Guid("a16bb186-092e-440d-92c9-fe57cd96ec4f")
                        });
                });

            modelBuilder.Entity("Questions.Domain.Entities.QuestionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .HasMaxLength(5000)
                        .HasColumnType("character varying(5000)");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("character varying(5000)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Questions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("93d52e4a-93dc-4981-a3d5-347eb731f51e"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1015), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1069), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Jakie znasz wzorce projektowe i architektoniczne ? Z których i jak korzystałeś ? Najważniejsze wzorce z GOF Gang of Four."
                        },
                        new
                        {
                            Id = new Guid("4c0294b2-2682-4c61-88a1-8ffd84306c5f"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1074), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1076), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Singleton (dlaczego to czasem antypatern)"
                        },
                        new
                        {
                            Id = new Guid("392a8313-460e-4639-a2e6-becdce25a34b"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1079), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1080), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Zaimplementuj singleton z bezpiecznym dostępem wielowątkowym (pamiętać o synchronizacji / double checking pattern / ew. SingletonHolder z bezpiecznym dostępem bez konieczności synchronizacji)."
                        },
                        new
                        {
                            Id = new Guid("0a4239b6-6467-48f6-a16d-8f2353196690"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1093), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1095), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Metoda fabryki"
                        },
                        new
                        {
                            Id = new Guid("a222ffd7-0bbd-4033-a785-17c283fb66a0"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1098), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1100), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Fabryka abstrakcyjna"
                        },
                        new
                        {
                            Id = new Guid("1f4b0d13-3cbd-4907-8020-1864320afe19"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1102), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1104), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Czym różną się wzorce fabryki abstrakcyjnej i metody fabryki ?"
                        },
                        new
                        {
                            Id = new Guid("dec16c40-5c65-4ed9-a20f-ad7a1e79e82c"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1106), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1108), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Dekorator"
                        },
                        new
                        {
                            Id = new Guid("3eb8a463-4efa-40aa-b286-806b751c7b44"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1111), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1112), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Obserwator"
                        },
                        new
                        {
                            Id = new Guid("d0ddc133-17b2-4121-b3ac-5f53ebc6b86a"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1116), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1117), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Facade pattern (bardzo ważny wzorzec)"
                        },
                        new
                        {
                            Id = new Guid("d18c8ae5-23db-4a22-9a28-0c9a1a33fa02"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1120), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1121), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Adapter"
                        },
                        new
                        {
                            Id = new Guid("88aecb39-1320-4db7-9a53-87b4b3cdbdd3"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1124), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1125), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Strategia"
                        },
                        new
                        {
                            Id = new Guid("4e804a39-acb6-484d-86b7-79b64d7bbed5"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1131), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1132), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Template method"
                        },
                        new
                        {
                            Id = new Guid("f05bd526-b0cf-4acd-9dbe-8f160feb87bf"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1135), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1136), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Builder"
                        },
                        new
                        {
                            Id = new Guid("3538dab7-0c18-41a8-9884-06b6965cb221"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1139), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1141), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Czy StringBuilder jest realizacją wzorca Builder ?"
                        },
                        new
                        {
                            Id = new Guid("1dc192f8-64a8-43b4-b286-d0b52924690e"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1143), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1145), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Mediator"
                        },
                        new
                        {
                            Id = new Guid("4fa32e95-59a6-481b-a9e3-151e3298903b"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1147), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1149), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Na czym polega wzorzec CQS i CQRS (command, action)?"
                        },
                        new
                        {
                            Id = new Guid("516a731d-1ffa-497d-a183-78bf70a7a062"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1152), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1153), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "MVC"
                        },
                        new
                        {
                            Id = new Guid("9416cbd9-f53d-45dc-9662-83c44dc0ae1f"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1156), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1157), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "MVVM"
                        },
                        new
                        {
                            Id = new Guid("9da8897b-4fa0-4428-b4fb-396f1115925d"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1160), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1162), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "MVP"
                        },
                        new
                        {
                            Id = new Guid("7590eea1-95a6-4d9c-b6c0-704c6e9a9f07"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1167), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1168), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "AOP"
                        },
                        new
                        {
                            Id = new Guid("ea67654e-ad53-400c-80cd-9c5e6cb69d0f"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1171), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1173), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "DAO"
                        },
                        new
                        {
                            Id = new Guid("9b9954d5-8667-4b76-96db-d0cb1bd4ae5c"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1176), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1177), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "DTO"
                        },
                        new
                        {
                            Id = new Guid("3b2d90a4-6f68-4c8c-b38e-15e109c91f08"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1180), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1181), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Repository"
                        },
                        new
                        {
                            Id = new Guid("e614d01d-e966-4396-a329-211a4dcf6a63"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1184), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1186), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Unit Of Work"
                        },
                        new
                        {
                            Id = new Guid("bfb8497d-4a58-4886-84c7-7d2d03d6ee24"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1188), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1190), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Circuit Braker"
                        },
                        new
                        {
                            Id = new Guid("3b57ff38-a9fb-4f51-85e7-5e208f559f68"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1193), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1194), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Retry"
                        },
                        new
                        {
                            Id = new Guid("610b2710-28f6-4e14-a35a-ae5fb3b1f971"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1197), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1199), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Proxy"
                        },
                        new
                        {
                            Id = new Guid("fb0f0cdc-a1cb-4991-a586-4b6b618cb771"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1204), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1205), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Czym jest Dependency Injection ? Jak to wygląda niskopoziomowo w C# ?"
                        },
                        new
                        {
                            Id = new Guid("e18d59db-eeae-4913-9195-75cc748fb218"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1208), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1209), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Czym jest Dependency Inversion i jak się ma do Dependency Injection ?"
                        },
                        new
                        {
                            Id = new Guid("ddd6d783-ba62-45b4-9d3d-ca14a30b94a8"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1212), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1214), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Czym jest IoC ? W jaki sposób jest powiązane z DI ?"
                        },
                        new
                        {
                            Id = new Guid("5b7fc34e-6700-478a-b4b9-c0b942affcdd"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1217), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1218), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Jakie są plusy stosowania DI i IoC? W jaki sposób stosowanie DI / IoC wspomaga testowanie jednostkowe?"
                        },
                        new
                        {
                            Id = new Guid("4b99cbd8-5072-4ad5-b533-3ecf5bff86f6"),
                            CategoryId = new Guid("71c8a70b-0e81-4b79-a7f8-fb51fcbef984"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1221), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1222), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Czym jest SOLID? Opisz wszystkie zasady. Podaj przykłady."
                        },
                        new
                        {
                            Id = new Guid("baeac038-67ac-4615-bda5-2d8eaf361c75"),
                            CategoryId = new Guid("71c8a70b-0e81-4b79-a7f8-fb51fcbef984"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1225), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1226), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Jak w SOLID można złamać regułę L ?"
                        },
                        new
                        {
                            Id = new Guid("244d496d-d561-4ef0-82c5-d9dc4e2d2889"),
                            CategoryId = new Guid("71c8a70b-0e81-4b79-a7f8-fb51fcbef984"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1261), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1263), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Czym jest reguła KISS ?"
                        },
                        new
                        {
                            Id = new Guid("0c379c20-3789-4618-8651-8e41ec37f64e"),
                            CategoryId = new Guid("71c8a70b-0e81-4b79-a7f8-fb51fcbef984"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1266), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1267), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Czym jest reguła DRY ?"
                        },
                        new
                        {
                            Id = new Guid("d3c28add-dd4e-40d2-9efd-762546129364"),
                            CategoryId = new Guid("71c8a70b-0e81-4b79-a7f8-fb51fcbef984"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1272), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1274), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Czym jest reguła YAGNI ?"
                        },
                        new
                        {
                            Id = new Guid("23acaa15-fc2e-4144-ac89-036403de0384"),
                            CategoryId = new Guid("71c8a70b-0e81-4b79-a7f8-fb51fcbef984"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1276), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1278), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Czym jest reguła SoC ?"
                        },
                        new
                        {
                            Id = new Guid("21459d3d-768e-41ea-9a18-462b486c4baf"),
                            CategoryId = new Guid("71c8a70b-0e81-4b79-a7f8-fb51fcbef984"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1280), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1282), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Czym jest reguła TDA ?"
                        },
                        new
                        {
                            Id = new Guid("764bc69e-c33a-4b3f-8b3f-53f3029bfae5"),
                            CategoryId = new Guid("71c8a70b-0e81-4b79-a7f8-fb51fcbef984"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1285), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1286), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Czym jest OOP ? Jakie są 4 główne zasady programowania obiektowego ?"
                        },
                        new
                        {
                            Id = new Guid("4a1b4855-1de0-4d1a-a053-d0fb534a7851"),
                            CategoryId = new Guid("71c8a70b-0e81-4b79-a7f8-fb51fcbef984"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1289), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1290), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Czym jest polimorfizm dynaczminy i statyczny ?"
                        },
                        new
                        {
                            Id = new Guid("17a28823-4372-4dee-a830-91607d11c491"),
                            CategoryId = new Guid("71c8a70b-0e81-4b79-a7f8-fb51fcbef984"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1293), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1294), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Czym charakteryzują się klasa abstrakcyjna i metoda abstrakcyjna ?"
                        },
                        new
                        {
                            Id = new Guid("f29b9ef1-9f24-49c6-ac1c-55fb4c932c1e"),
                            CategoryId = new Guid("71c8a70b-0e81-4b79-a7f8-fb51fcbef984"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1297), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1299), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Która zasada OOP według ciebie jest najważniejsza ?"
                        },
                        new
                        {
                            Id = new Guid("b0af5f2a-1f8d-414d-914e-72d740efc594"),
                            CategoryId = new Guid("71c8a70b-0e81-4b79-a7f8-fb51fcbef984"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1302), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1303), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Przedstaw ideę dziedziczenia na przykładzie z życia."
                        },
                        new
                        {
                            Id = new Guid("58ee2bca-9e8d-4361-83ef-1b8d7aad951c"),
                            CategoryId = new Guid("71c8a70b-0e81-4b79-a7f8-fb51fcbef984"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1308), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 48, 38, 47, DateTimeKind.Unspecified).AddTicks(1310), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Zadania z wykorzystaniem polimorfizmu i dziedziczenia, gdzie określa się co wypisze metoda."
                        });
                });

            modelBuilder.Entity("Questions.Domain.Entities.CategoryEntity", b =>
                {
                    b.HasOne("Questions.Domain.Entities.CategoryEntity", null)
                        .WithMany("ChildCategories")
                        .HasForeignKey("ParentCategoryId");
                });

            modelBuilder.Entity("Questions.Domain.Entities.QuestionEntity", b =>
                {
                    b.HasOne("Questions.Domain.Entities.CategoryEntity", null)
                        .WithMany("Questions")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Questions.Domain.Entities.CategoryEntity", b =>
                {
                    b.Navigation("ChildCategories");

                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
