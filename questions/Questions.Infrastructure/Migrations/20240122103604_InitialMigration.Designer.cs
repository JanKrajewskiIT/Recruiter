// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Questions.Infrastructure.Context;

#nullable disable

namespace Questions.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240122103604_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Questions.Domain.Entities.CategoryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasMaxLength(5000)
                        .HasColumnType("character varying(5000)");

                    b.Property<string>("IconName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<Guid?>("ParentCategoryId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("bb1c2675-5877-4aa5-9bc6-00be8d449549"),
                            IconName = "",
                            Name = "Przygotowanie na rozmowę",
                            Order = 1
                        },
                        new
                        {
                            Id = new Guid("997bb095-fb04-4872-ac35-0d05cedc3de0"),
                            IconName = "",
                            Name = "Umiejętności miękkie",
                            Order = 2
                        },
                        new
                        {
                            Id = new Guid("28aec609-f96e-4ae6-8db2-358a1892502e"),
                            IconName = "",
                            Name = "Architektura",
                            Order = 3
                        },
                        new
                        {
                            Id = new Guid("a16bb186-092e-440d-92c9-fe57cd96ec4f"),
                            IconName = "",
                            Name = "Algorytmy",
                            Order = 4
                        },
                        new
                        {
                            Id = new Guid("4ec57b9a-8753-4ec0-bebe-d4d361c9ecf2"),
                            IconName = "",
                            Name = "C#",
                            Order = 5
                        },
                        new
                        {
                            Id = new Guid("6c5cf69c-c674-4fc0-b613-c45daa8633c0"),
                            IconName = "",
                            Name = ".Net",
                            Order = 6
                        },
                        new
                        {
                            Id = new Guid("d5dfef6e-6be4-42b2-a5b8-4852c733bcf8"),
                            IconName = "",
                            Name = "SQL",
                            Order = 7
                        },
                        new
                        {
                            Id = new Guid("3bb831ec-69aa-4a75-a71e-5079dc06ac26"),
                            IconName = "",
                            Name = "React",
                            Order = 8
                        },
                        new
                        {
                            Id = new Guid("c13e9522-2b62-433a-9bd6-365e49233508"),
                            IconName = "",
                            Name = "Type Script",
                            Order = 9
                        },
                        new
                        {
                            Id = new Guid("9dd3c14f-3685-4370-bc0c-42ee8bf2b2e8"),
                            IconName = "",
                            Name = "CSS",
                            Order = 10
                        },
                        new
                        {
                            Id = new Guid("db7d3eaa-d153-48d4-b000-383a8cf1fc6f"),
                            IconName = "",
                            Name = "HTML",
                            Order = 11
                        },
                        new
                        {
                            Id = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            IconName = "",
                            Name = "Wzorce projektowe",
                            Order = 1,
                            ParentCategoryId = new Guid("28aec609-f96e-4ae6-8db2-358a1892502e")
                        },
                        new
                        {
                            Id = new Guid("71c8a70b-0e81-4b79-a7f8-fb51fcbef984"),
                            IconName = "",
                            Name = "OOP",
                            Order = 2,
                            ParentCategoryId = new Guid("28aec609-f96e-4ae6-8db2-358a1892502e")
                        },
                        new
                        {
                            Id = new Guid("0a07f758-355f-4796-8ab4-f5a34cfca181"),
                            IconName = "",
                            Name = "Wielowątkowość",
                            Order = 1,
                            ParentCategoryId = new Guid("a16bb186-092e-440d-92c9-fe57cd96ec4f")
                        });
                });

            modelBuilder.Entity("Questions.Domain.Entities.QuestionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .HasMaxLength(5000)
                        .HasColumnType("character varying(5000)");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("character varying(5000)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Questions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("9fe58812-2193-4b8c-9c69-2c743718999a"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1365), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1423), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Jakie znasz wzorce projektowe i architektoniczne ? Z których i jak korzystałeś ? Najważniejsze wzorce z GOF Gang of Four."
                        },
                        new
                        {
                            Id = new Guid("7fb796e7-a90a-40dd-9702-950c4922064f"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1428), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1430), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Singleton (dlaczego to czasem antypatern)"
                        },
                        new
                        {
                            Id = new Guid("66308f56-aea1-4896-8c2b-65fcc81bfc11"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1433), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1434), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Zaimplementuj singleton z bezpiecznym dostępem wielowątkowym (pamiętać o synchronizacji / double checking pattern / ew. SingletonHolder z bezpiecznym dostępem bez konieczności synchronizacji)."
                        },
                        new
                        {
                            Id = new Guid("6aa1562f-706d-4a4f-8b14-aab3f04bf51c"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1437), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1439), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Metoda fabryki"
                        },
                        new
                        {
                            Id = new Guid("ceab8e84-ab29-4bb0-ac04-6d0da576ca44"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1442), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1443), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Fabryka abstrakcyjna"
                        },
                        new
                        {
                            Id = new Guid("9cb074c5-fb65-49e0-a39c-14f3a0c02f35"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1457), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1459), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Czym różną się wzorce fabryki abstrakcyjnej i metody fabryki ?"
                        },
                        new
                        {
                            Id = new Guid("ecd6b0cc-9d4a-4357-8c93-f1ea489f482f"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1462), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1463), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Dekorator"
                        },
                        new
                        {
                            Id = new Guid("d6a35f54-7a35-49b1-bb16-f19944ea7628"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1466), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1468), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Obserwator"
                        },
                        new
                        {
                            Id = new Guid("5f519d61-30d3-4fa7-a69c-2d346d7406a4"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1470), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1472), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Facade pattern (bardzo ważny wzorzec)"
                        },
                        new
                        {
                            Id = new Guid("0f38d66c-7f9b-413e-8fcf-ddcccd653313"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1474), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1476), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Adapter"
                        },
                        new
                        {
                            Id = new Guid("14eed201-e5c2-4cec-9053-e4c970516cc6"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1479), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1480), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Strategia"
                        },
                        new
                        {
                            Id = new Guid("00ea2cd9-29fc-4edf-9678-856d2e0d026c"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1483), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1484), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Template method"
                        },
                        new
                        {
                            Id = new Guid("1a3bc195-634b-4248-973f-72ba6b2d74eb"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1516), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1518), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Builder"
                        },
                        new
                        {
                            Id = new Guid("96c85022-fa17-4d44-8f1b-2c02739164e7"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1523), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1525), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Czy StringBuilder jest realizacją wzorca Builder ?"
                        },
                        new
                        {
                            Id = new Guid("d80333b1-8a90-4304-985f-c34015c40d43"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1527), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1529), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Mediator"
                        },
                        new
                        {
                            Id = new Guid("8ca02f69-35cd-4ed3-b7c7-da1fb7699654"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1532), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1533), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Na czym polega wzorzec CQS i CQRS (command, action)?"
                        },
                        new
                        {
                            Id = new Guid("0a526e95-5e05-4556-a72d-ae9ea53b7212"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1536), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1537), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "MVC"
                        },
                        new
                        {
                            Id = new Guid("441a80ef-8109-4d10-bd7a-d5334cd9871e"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1540), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1542), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "MVVM"
                        },
                        new
                        {
                            Id = new Guid("09d9ea00-c11d-46ef-8e92-6b937d6acddb"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1545), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1546), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "MVP"
                        },
                        new
                        {
                            Id = new Guid("94aabedc-a65f-4dba-8626-64ab98edc377"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1549), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1550), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "AOP"
                        },
                        new
                        {
                            Id = new Guid("6bcfb1c1-30a9-4b4a-a211-98624f8fb8f4"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1553), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1554), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "DAO"
                        },
                        new
                        {
                            Id = new Guid("05244e2d-bff1-4aad-9f9f-1d6358601015"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1560), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1561), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "DTO"
                        },
                        new
                        {
                            Id = new Guid("8c46bca7-c348-4267-8252-a3825b1ab522"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1564), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1566), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Repository"
                        },
                        new
                        {
                            Id = new Guid("27ae4e63-b6a9-4ce7-8c54-b7e915dbd0b4"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1568), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1570), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Unit Of Work"
                        },
                        new
                        {
                            Id = new Guid("e64847d9-606d-4036-a2bb-10d25138edf4"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1573), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1574), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Circuit Braker"
                        },
                        new
                        {
                            Id = new Guid("9c73c066-d507-445a-9aee-937dd7cee0dc"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1577), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1578), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Retry"
                        },
                        new
                        {
                            Id = new Guid("28261dbf-e6f9-4f3d-982c-77205cb2a827"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1581), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1582), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Proxy"
                        },
                        new
                        {
                            Id = new Guid("56411403-30ba-4dca-b3c8-c32b106c1222"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1585), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1587), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Czym jest Dependency Injection ? Jak to wygląda niskopoziomowo w C# ?"
                        },
                        new
                        {
                            Id = new Guid("099057e7-cdbf-435c-9bd1-8bbeed1fb1cf"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1590), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1591), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Czym jest Dependency Inversion i jak się ma do Dependency Injection ?"
                        },
                        new
                        {
                            Id = new Guid("34d97f39-eb30-43c9-abb4-bfed43705f4e"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1596), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1598), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Czym jest IoC ? W jaki sposób jest powiązane z DI ?"
                        },
                        new
                        {
                            Id = new Guid("ce8e00d5-da96-4083-9023-b9054eb2710a"),
                            CategoryId = new Guid("7497e8fc-80a5-42df-ac48-c09f695dc402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1600), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1602), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Jakie są plusy stosowania DI i IoC? W jaki sposób stosowanie DI / IoC wspomaga testowanie jednostkowe?"
                        },
                        new
                        {
                            Id = new Guid("44277bb3-0a84-47a5-aade-6978080216a0"),
                            CategoryId = new Guid("71c8a70b-0e81-4b79-a7f8-fb51fcbef984"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1605), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1606), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Czym jest SOLID? Opisz wszystkie zasady. Podaj przykłady."
                        },
                        new
                        {
                            Id = new Guid("9d51056d-b87a-4405-851b-9fcc961bdb52"),
                            CategoryId = new Guid("71c8a70b-0e81-4b79-a7f8-fb51fcbef984"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1609), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1610), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Jak w SOLID można złamać regułę L ?"
                        },
                        new
                        {
                            Id = new Guid("6b25df27-e50a-4177-921b-1b177ccfb73b"),
                            CategoryId = new Guid("71c8a70b-0e81-4b79-a7f8-fb51fcbef984"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1613), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1614), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Czym jest reguła KISS ?"
                        },
                        new
                        {
                            Id = new Guid("a5d3e8d1-a7a3-4e1d-aa44-fa3cc8e75a57"),
                            CategoryId = new Guid("71c8a70b-0e81-4b79-a7f8-fb51fcbef984"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1617), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1619), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Czym jest reguła DRY ?"
                        },
                        new
                        {
                            Id = new Guid("b1c34f5d-7a3a-4241-94fe-49da5348625f"),
                            CategoryId = new Guid("71c8a70b-0e81-4b79-a7f8-fb51fcbef984"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1622), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1623), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Czym jest reguła YAGNI ?"
                        },
                        new
                        {
                            Id = new Guid("548e56fa-6f51-41fb-a946-6886e1f5704c"),
                            CategoryId = new Guid("71c8a70b-0e81-4b79-a7f8-fb51fcbef984"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1626), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1627), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Czym jest reguła SoC ?"
                        },
                        new
                        {
                            Id = new Guid("8d75dbe0-1bb7-4176-af2a-c2c9cf1fb8fe"),
                            CategoryId = new Guid("71c8a70b-0e81-4b79-a7f8-fb51fcbef984"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1632), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1634), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Czym jest reguła TDA ?"
                        },
                        new
                        {
                            Id = new Guid("a2764b5b-4ea4-4e64-9b2c-fce0767663aa"),
                            CategoryId = new Guid("71c8a70b-0e81-4b79-a7f8-fb51fcbef984"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1637), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1638), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Czym jest OOP ? Jakie są 4 główne zasady programowania obiektowego ?"
                        },
                        new
                        {
                            Id = new Guid("b58819f1-0aac-4141-81da-99f5bc500017"),
                            CategoryId = new Guid("71c8a70b-0e81-4b79-a7f8-fb51fcbef984"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1641), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1642), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Czym jest polimorfizm dynaczminy i statyczny ?"
                        },
                        new
                        {
                            Id = new Guid("36c9767b-8b8b-440a-a07b-7eb7c8d7537b"),
                            CategoryId = new Guid("71c8a70b-0e81-4b79-a7f8-fb51fcbef984"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1646), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1647), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Czym charakteryzują się klasa abstrakcyjna i metoda abstrakcyjna ?"
                        },
                        new
                        {
                            Id = new Guid("c6e9451e-d980-44f4-93bb-ef9cc0c5fca4"),
                            CategoryId = new Guid("71c8a70b-0e81-4b79-a7f8-fb51fcbef984"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1650), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1651), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Która zasada OOP według ciebie jest najważniejsza ?"
                        },
                        new
                        {
                            Id = new Guid("6ec0ffbc-7e73-460a-9b2c-7eee9bcf095a"),
                            CategoryId = new Guid("71c8a70b-0e81-4b79-a7f8-fb51fcbef984"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1654), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1655), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Przedstaw ideę dziedziczenia na przykładzie z życia."
                        },
                        new
                        {
                            Id = new Guid("80ab5d56-c5da-4169-93dc-e0591978d67b"),
                            CategoryId = new Guid("71c8a70b-0e81-4b79-a7f8-fb51fcbef984"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1658), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedOn = new DateTimeOffset(new DateTime(2024, 1, 22, 11, 36, 3, 991, DateTimeKind.Unspecified).AddTicks(1660), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Zadania z wykorzystaniem polimorfizmu i dziedziczenia, gdzie określa się co wypisze metoda."
                        });
                });

            modelBuilder.Entity("Questions.Domain.Entities.CategoryEntity", b =>
                {
                    b.HasOne("Questions.Domain.Entities.CategoryEntity", null)
                        .WithMany("ChildCategories")
                        .HasForeignKey("ParentCategoryId");
                });

            modelBuilder.Entity("Questions.Domain.Entities.QuestionEntity", b =>
                {
                    b.HasOne("Questions.Domain.Entities.CategoryEntity", null)
                        .WithMany("Questions")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Questions.Domain.Entities.CategoryEntity", b =>
                {
                    b.Navigation("ChildCategories");

                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
